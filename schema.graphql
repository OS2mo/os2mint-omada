"""Address information for an employee or organisation unit"""
type Address {
  """Address type"""
  address_type(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class!

  """Address visibility"""
  visibility(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class

  """
  Connected employee. Note that this is mutually exclusive with the org_unit field
  """
  employee(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, cpr_numbers: [CPR!] = null): [Employee!]

  """
  Connected organisation unit. Note that this is mutually exclusive with the employee field
  """
  org_unit(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, parents: [UUID!], hierarchies: [UUID!] = null): [OrganisationUnit!]

  """Connected Engagement"""
  engagement(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null, org_units: [UUID!] = null): [Engagement!]

  """Name of address"""
  name: String

  """href of address"""
  href: String

  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID

  """Short, unique key. Defaults to object UUID."""
  user_key: String

  """The object type."""
  type: String!

  """Value of the address, e.g. street or phone number."""
  value: String!

  """Optional second value of the address."""
  value2: String

  """Validity of the address object."""
  validity: Validity!

  """UUID of the address type klasse."""
  address_type_uuid: UUID!

  """UUID of the employee related to the address."""
  employee_uuid: UUID

  """UUID of the organisation unit related to the address."""
  org_unit_uuid: UUID

  """Optional UUID of an associated engagement."""
  engagement_uuid: UUID

  """UUID of the visibility klasse of the address."""
  visibility_uuid: UUID
}

input AddressCreateInput {
  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID = null

  """The actual address value."""
  value: String!

  """Type of the address."""
  address_type: UUID!

  """Visibility for the address."""
  visibility: UUID = null

  """UUID for the related org unit."""
  org_unit: UUID = null

  """UUID for the related person."""
  person: UUID = null

  """UUID for the related engagement."""
  engagement: UUID = null

  """Validity range for the org-unit."""
  validity: RAValidityInput!
}

type AddressResponse {
  uuid: UUID!

  """Current state at query validity time"""
  current: Address

  """Validities at query registration time"""
  objects: [Address!]!

  """Registrations for the current entity"""
  registrations(actors: [UUID!] = null, start: DateTime = null, end: DateTime = null): [Registration!]!
}

input AddressTerminateInput {
  """Start date of the validity."""
  from: DateTime = null

  """When the validity should end - required when terminating"""
  to: DateTime!

  """UUID for the address we want to terminate."""
  uuid: UUID!
}

input AddressUpdateInput {
  """UUID of the association we want to update."""
  uuid: UUID!

  """Extra info or uuid."""
  user_key: String = null

  """Org-unit uuid."""
  org_unit: UUID = null

  """Employee uuid."""
  employee: UUID = null

  """Address type uuid."""
  address_type: UUID = null

  """Engagement uuid."""
  engagement: UUID = null

  """Info related to the specific addresstype."""
  value: String = null

  """UUID for visibility of the address."""
  visibility: UUID = null

  """Validity range for the address."""
  validity: RAValidityInput!
}

"""Connects organisation units and employees"""
type Association {
  """Association type"""
  association_type(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class

  """dynamic class"""
  dynamic_class(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class

  """Primary status"""
  primary(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class

  """Connected employee"""
  employee(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, cpr_numbers: [CPR!] = null): [Employee!]!

  """Connected organisation unit"""
  org_unit(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, parents: [UUID!], hierarchies: [UUID!] = null): [OrganisationUnit!]!

  """Connected substitute employee"""
  substitute(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, cpr_numbers: [CPR!] = null): [Employee!]!

  """Connected job function"""
  job_function(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class

  """Connected IT user"""
  it_user(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null, org_units: [UUID!] = null): [ITUser!]!

  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID

  """Short, unique key. Defaults to object UUID."""
  user_key: String

  """The object type."""
  type: String!

  """Validity of the association object."""
  validity: Validity!

  """Attached class"""
  dynamic_class_uuid: UUID

  """UUID of the organisation unit related to the association."""
  org_unit_uuid: UUID!

  """UUID of the employee related to the association."""
  employee_uuid: UUID

  """UUID of the association type."""
  association_type_uuid: UUID

  """UUID of the primary type of the association."""
  primary_uuid: UUID

  """UUID of the substitute for the employee in the association."""
  substitute_uuid: UUID

  """UUID of a job function class, only defined for 'IT associations.'"""
  job_function_uuid: UUID

  """UUID of an 'ITUser' model, only defined for 'IT associations.'"""
  it_user_uuid: UUID
}

input AssociationCreateInput {
  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID = null

  """Extra info or uuid."""
  user_key: String = null
  org_unit: UUID!
  employee: UUID!
  association_type: UUID!

  """Validity range for the org-unit."""
  validity: RAValidityInput!
}

type AssociationResponse {
  uuid: UUID!

  """Current state at query validity time"""
  current: Association

  """Validities at query registration time"""
  objects: [Association!]!

  """Registrations for the current entity"""
  registrations(actors: [UUID!] = null, start: DateTime = null, end: DateTime = null): [Registration!]!
}

input AssociationTerminateInput {
  """Start date of the validity."""
  from: DateTime = null

  """When the validity should end - required when terminating"""
  to: DateTime!

  """UUID for the association we want to terminate."""
  uuid: UUID!
}

input AssociationUpdateInput {
  """UUID of the association we want to update."""
  uuid: UUID!

  """Extra info or uuid."""
  user_key: String = null

  """org-unit uuid."""
  org_unit: UUID = null

  """Employee uuid."""
  employee: UUID = null

  """Association type uuid."""
  association_type: UUID = null

  """Validity range for the org-unit."""
  validity: RAValidityInput!
}

scalar CPR

"""The value component of the class/facet choice setup"""
type Class {
  """Immediate parent class"""
  parent(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class

  """Immediate descendants of the class"""
  children(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parent_user_keys: [String!] = null): [Class!]!

  """Associated facet"""
  facet(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime): Facet!

  """Associated top-level facet"""
  top_level_facet: Facet!

  """Full name, for backwards compatibility"""
  full_name: String!

  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID

  """Short, unique key. Defaults to object UUID."""
  user_key: String

  """The object type"""
  type: String!

  """Scope of the class."""
  scope: String

  """Published state of the class object."""
  published: String

  """UUID of the parent class."""
  parent_uuid: UUID

  """Example usage."""
  example: String

  """Owner of class"""
  owner: UUID

  """Name/title of the class."""
  name: String!

  """UUID of the related facet."""
  facet_uuid: UUID!

  """UUID of the related organisation."""
  org_uuid: UUID!
}

input ClassCreateInput {
  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID = null

  """The object type"""
  type: String! = "class"

  """Mo-class name."""
  name: String!

  """Extra info or uuid"""
  user_key: String!

  """UUID of the related organisation."""
  org_uuid: UUID!

  """UUID of the related facet."""
  facet_uuid: UUID!

  """Scope of the class."""
  scope: String = null

  """Published state of the class object."""
  published: String = null

  """UUID of the parent class."""
  parent_uuid: UUID = null

  """Example usage."""
  example: String = null

  """Owner of class"""
  owner: UUID = null
}

input ClassUpdateInput {
  """Mo-class name."""
  name: String!

  """Extra info or uuid"""
  user_key: String!

  """UUID of the related facet."""
  facet_uuid: UUID!

  """Scope of the class."""
  scope: String = null

  """Published state of the class object."""
  published: String! = "Publiceret"

  """UUID of the parent class."""
  parent_uuid: UUID = null

  """Example usage."""
  example: String = null

  """Owner of class"""
  owner: UUID = null
}

"""A configuration setting"""
type Configuration {
  """JSONified value"""
  jsonified_value: String!

  """Stringified value"""
  stringified_value: String!

  """Settings key."""
  key: String!
}

scalar Cursor

"""Date (isoformat)"""
scalar Date

"""Date with time (isoformat)"""
scalar DateTime

"""Employee/identity specific information"""
type Employee {
  """Engagements for the employee"""
  engagements(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, org_units: [UUID!] = null): [Engagement!]!

  """Manager roles for the employee"""
  manager_roles(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, org_units: [UUID!] = null): [Manager!]!

  """Addresses for the employee"""
  addresses(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, address_types: [UUID!] = null, address_type_user_keys: [String!] = null, engagements: [UUID!] = null, org_units: [UUID!] = null): [Address!]!

  """Leaves for the employee"""
  leaves(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, org_units: [UUID!] = null): [Leave!]!

  """Associations for the employee"""
  associations(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, org_units: [UUID!] = null, association_types: [UUID!] = null, association_type_user_keys: [String!] = null): [Association!]!

  """Roles for the employee"""
  roles(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, org_units: [UUID!] = null): [Role!]!

  """IT users for the employee"""
  itusers(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, org_units: [UUID!] = null): [ITUser!]!

  """Engagement associations"""
  engagement_associations(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, engagements: [UUID!] = null, org_units: [UUID!] = null): [EngagementAssociation!]!

  """Full name of the employee"""
  name: String!

  """Full nickname of the employee"""
  nickname: String!

  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID

  """Short, unique key. Defaults to object UUID."""
  user_key: String

  """The object type"""
  type: String!

  """CPR number of the employee."""
  cpr_no: String

  """Seniority of the employee."""
  seniority: Date

  """Given name of the employee."""
  givenname: String!

  """Surname of the employee."""
  surname: String!

  """Given name part of nickname of the employee."""
  nickname_givenname: String

  """Surname part of nickname of the employee."""
  nickname_surname: String

  """Validity of the employee."""
  validity: OpenValidity!
}

input EmployeeCreateInput {
  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID = null

  """Extra info or uuid."""
  user_key: String = null

  """Givenname (firstname) of the employee."""
  givenname: String!

  """Surname (lastname) of the employee."""
  surname: String!

  """Danish CPR number of the employee."""
  cpr_number: String = null
}

type EmployeeResponse {
  uuid: UUID!

  """Current state at query validity time"""
  current: Employee

  """Validities at query registration time"""
  objects: [Employee!]!

  """Registrations for the current entity"""
  registrations(actors: [UUID!] = null, start: DateTime = null, end: DateTime = null): [Registration!]!
}

input EmployeeTerminateInput {
  """Start date of the validity."""
  from: DateTime = null

  """When the validity should end - required when terminating"""
  to: DateTime!

  """UUID for the employee we want to terminate."""
  uuid: UUID!
}

input EmployeeUpdateInput {
  """Start date of the validity."""
  from: DateTime!

  """End date of the validity, if applicable."""
  to: DateTime = null

  """UUID of the employee to be updated."""
  uuid: UUID!

  """
  Short, unique key for the employee (defaults to object UUID on creation).
  """
  user_key: String = null

  """New value for the name of the employee"""
  name: String = null

  """New first-name value of the employee nickname."""
  given_name: String = null

  """New last-name value of the employee nickname."""
  surname: String = null

  """New nickname value of the employee nickname."""
  nickname: String = null

  """New nickname given-name value of the employee nickname."""
  nickname_given_name: String = null

  """New nickname sur-name value of the employee nickname."""
  nickname_surname: String = null

  """New seniority value of the employee."""
  seniority: Date = null

  """New danish CPR No. of the employee."""
  cpr_no: CPR = null
}

"""Employee engagement in an organisation unit"""
type Engagement {
  """Engagement type"""
  engagement_type(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class!

  """Job function"""
  job_function(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class!

  """Primary status"""
  primary(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class

  """Related leave"""
  leave(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null, org_units: [UUID!] = null): Leave

  """Related employee"""
  employee(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, cpr_numbers: [CPR!] = null): [Employee!]!

  """Related organisation unit"""
  org_unit(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, parents: [UUID!], hierarchies: [UUID!] = null): [OrganisationUnit!]!

  """Engagement associations"""
  engagement_associations(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null, org_units: [UUID!] = null): [EngagementAssociation!]!

  """Is it primary"""
  is_primary: Boolean!

  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID

  """Short, unique key. Defaults to object UUID."""
  user_key: String

  """The object type."""
  type: String!

  """Validity of the engagement object."""
  validity: Validity!

  """
  Indication of contribution to the collection of engagements for the given employee.
  """
  fraction: Int

  """Optional extra information."""
  extension_1: String

  """Optional extra information."""
  extension_2: String

  """Optional extra information."""
  extension_3: String

  """Optional extra information."""
  extension_4: String

  """Optional extra information."""
  extension_5: String

  """Optional extra information."""
  extension_6: String

  """Optional extra information."""
  extension_7: String

  """Optional extra information."""
  extension_8: String

  """Optional extra information."""
  extension_9: String

  """Optional extra information."""
  extension_10: String

  """UUID of the organisation unit related to the engagement."""
  org_unit_uuid: UUID!

  """UUID of the employee related to the engagement."""
  employee_uuid: UUID!

  """UUID of the engagement type klasse of the engagement."""
  engagement_type_uuid: UUID!

  """UUID of the job function klasse of the engagement."""
  job_function_uuid: UUID!

  """UUID of the leave related to the engagement."""
  leave_uuid: UUID

  """UUID of the primary klasse of the engagement."""
  primary_uuid: UUID
}

"""Employee engagement in an organisation unit"""
type EngagementAssociation {
  """Connected organisation unit"""
  org_unit(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, parents: [UUID!], hierarchies: [UUID!] = null): [OrganisationUnit!]!

  """Related engagement"""
  engagement(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null, org_units: [UUID!] = null): [Engagement!]!

  """Related engagement association type"""
  engagement_association_type(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class!

  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID

  """Short, unique key. Defaults to object UUID."""
  user_key: String

  """The object type."""
  type: String!

  """Validity of the association object."""
  validity: Validity!

  """
  Reference to the organisation unit for which the engagement association should be created.
  """
  org_unit_uuid: UUID!

  """
  Reference to the engagement for which the engagement association should be created.
  """
  engagement_uuid: UUID!

  """
  Reference to the engagement association type klasse for the created engagement association object.
  """
  engagement_association_type_uuid: UUID!
}

type EngagementAssociationResponse {
  uuid: UUID!

  """Current state at query validity time"""
  current: EngagementAssociation

  """Validities at query registration time"""
  objects: [EngagementAssociation!]!

  """Registrations for the current entity"""
  registrations(actors: [UUID!] = null, start: DateTime = null, end: DateTime = null): [Registration!]!
}

input EngagementCreateInput {
  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID = null

  """Name or UUID of the related engagement."""
  user_key: String = null

  """The related org-unit object."""
  org_unit: UUID!

  """UUID of the related employee."""
  employee: UUID!
  engagement_type: UUID!
  job_function: UUID!

  """Validity of the engagement object."""
  validity: RAValidityInput!
}

type EngagementResponse {
  uuid: UUID!

  """Current state at query validity time"""
  current: Engagement

  """Validities at query registration time"""
  objects: [Engagement!]!

  """Registrations for the current entity"""
  registrations(actors: [UUID!] = null, start: DateTime = null, end: DateTime = null): [Registration!]!
}

input EngagementTerminateInput {
  """Start date of the validity."""
  from: DateTime = null

  """When the validity should end - required when terminating"""
  to: DateTime!

  """UUID for the engagement we want to terminate."""
  uuid: UUID!
}

input EngagementUpdateInput {
  """UUID of the Engagement you want to update."""
  uuid: UUID!

  """Name or UUID of the related engagement."""
  user_key: String = null

  """The related org-unit object."""
  org_unit: UUID = null

  """UUID of the related employee."""
  employee: UUID = null

  """UUID of the engagement type."""
  engagement_type: UUID = null

  """UUID of the job function."""
  job_function: UUID = null

  """Validity of the engagement object."""
  validity: RAValidityInput!
}

"""The key component of the class/facet choice setup"""
type Facet {
  """Associated classes"""
  classes(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): [Class!]!

  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID

  """Short, unique key."""
  user_key: String!

  """The object type"""
  type: String!

  """Published state of the facet object."""
  published: String

  """UUID of the related organisation."""
  org_uuid: UUID!

  """UUID of the parent facet."""
  parent_uuid: UUID

  """Description of the facet object."""
  description: String!
}

input FacetCreateInput {
  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID = null

  """Facet name."""
  user_key: String!

  """The object type"""
  type: String! = "facet"

  """UUID of the related organisation."""
  org_uuid: UUID!

  """UUID of the parent facet."""
  parent_uuid: UUID = null

  """Published state of the facet object."""
  published: String = null
}

input FacetUpdateInput {
  """Facet name."""
  user_key: String!

  """Published state of the facet object."""
  published: String! = "Publiceret"
}

"""Checks whether a specific subsystem is working"""
type File {
  """Text contents"""
  text_contents: String!

  """Base64 encoded contents"""
  base64_contents: String!

  """The file store the file is stored in."""
  file_store: FileStore!

  """Name of the export file."""
  file_name: String!
}

enum FileStore {
  EXPORTS
  INSIGHTS
}

"""Checks whether a specific subsystem is working"""
type Health {
  """Healthcheck status"""
  status: Boolean

  """Short, unique key."""
  identifier: String!
}

type HealthPaged {
  objects: [Health!]!
  page_info: PageInfo!
}

"""Systems that IT users are connected to"""
type ITSystem {
  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID

  """Short, unique key."""
  user_key: String!

  """The object type"""
  type: String!

  """Name/titel of the itsystem."""
  name: String!

  """The ITSystem type."""
  system_type: String
}

input ITSystemCreateInput {
  user_key: String!
  name: String!

  """Start date of the validity."""
  from: DateTime = null

  """End date of the validity, if applicable."""
  to: DateTime = null
}

"""User information related to IT systems"""
type ITUser {
  """Connected employee"""
  employee(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, cpr_numbers: [CPR!] = null): [Employee!]

  """Connected organisation unit"""
  org_unit(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, parents: [UUID!], hierarchies: [UUID!] = null): [OrganisationUnit!]

  """Related engagement"""
  engagement(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null, org_units: [UUID!] = null): [Engagement!]

  """Connected itsystem"""
  itsystem(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime): ITSystem!

  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID

  """Short, unique key. Defaults to object UUID."""
  user_key: String

  """The object type."""
  type: String!

  """Validity of the IT user object."""
  validity: Validity!

  """UUID of the ITSystem related to the user."""
  itsystem_uuid: UUID!

  """UUID of the employee related to the user."""
  employee_uuid: UUID

  """UUID organisation unit related to the user."""
  org_unit_uuid: UUID

  """UUID of the engagement related to the user."""
  engagement_uuid: UUID

  """UUID of an associated `primary_type` class."""
  primary_uuid: UUID
}

input ITUserCreateInput {
  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID = null

  """The object type."""
  type: String! = "it"

  """The IT user account name."""
  user_key: String!

  """Primary field of the IT user object"""
  primary: UUID = null

  """Reference to the IT system for the IT user."""
  itsystem: UUID!

  """Reference to the employee for the IT user (if any)."""
  person: UUID = null

  """Reference to the organisation unit of the IT user (if any)."""
  org_unit: UUID = null

  """Reference to the engagement of the IT user (if any)."""
  engagement: UUID = null

  """Validity of the created IT user object."""
  validity: RAValidityInput!
}

type ITUserResponse {
  uuid: UUID!

  """Current state at query validity time"""
  current: ITUser

  """Validities at query registration time"""
  objects: [ITUser!]!

  """Registrations for the current entity"""
  registrations(actors: [UUID!] = null, start: DateTime = null, end: DateTime = null): [Registration!]!
}

input ITUserTerminateInput {
  """Start date of the validity."""
  from: DateTime = null

  """When the validity should end - required when terminating"""
  to: DateTime!

  """UUID for the it-user we want to terminate."""
  uuid: UUID!
}

input ITUserUpdateInput {
  """UUID of the IT-user you want to update."""
  uuid: UUID!

  """The IT user account name."""
  user_key: String = null

  """Optional reference to an engagement."""
  engagement: UUID = null

  """Primary field of the IT user object"""
  primary: UUID = null

  """Reference to the IT system for the IT user."""
  itsystem: UUID = null

  """Validity of the created IT user object."""
  validity: RAValidityInput!
}

"""Kommunernes Landsforenings Emnesystematik"""
type KLE {
  """KLE number"""
  kle_number(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class!

  """KLE Aspects"""
  kle_aspects(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): [Class!]!

  """Associated organisation unit"""
  org_unit(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, parents: [UUID!], hierarchies: [UUID!] = null): [OrganisationUnit!]

  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID

  """Short, unique key. Defaults to object UUID."""
  user_key: String

  """The object type."""
  type: String!

  """Validity of the kle object."""
  validity: Validity!

  """UUID of the KLE number."""
  kle_number_uuid: UUID!

  """List of UUIDs of the KLE aspect."""
  kle_aspect_uuids: [UUID!]!

  """UUID of the organisation unit related to the KLE."""
  org_unit_uuid: UUID
}

type KLEResponse {
  uuid: UUID!

  """Current state at query validity time"""
  current: KLE

  """Validities at query registration time"""
  objects: [KLE!]!

  """Registrations for the current entity"""
  registrations(actors: [UUID!] = null, start: DateTime = null, end: DateTime = null): [Registration!]!
}

"""Leave (e.g. parental leave) for employees"""
type Leave {
  """Leave type"""
  leave_type(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class!

  """Related employee"""
  employee(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, cpr_numbers: [CPR!] = null): [Employee!]!

  """Related engagement"""
  engagement(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null, org_units: [UUID!] = null): Engagement

  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID

  """Short, unique key. Defaults to object UUID."""
  user_key: String

  """The object type."""
  type: String!

  """Validity of the leave object."""
  validity: Validity!

  """UUID of the employee related to the leave."""
  employee_uuid: UUID!

  """UUID of the leave type klasse."""
  leave_type_uuid: UUID!

  """UUID of the engagement related to the leave."""
  engagement_uuid: UUID
}

type LeaveResponse {
  uuid: UUID!

  """Current state at query validity time"""
  current: Leave

  """Validities at query registration time"""
  objects: [Leave!]!

  """Registrations for the current entity"""
  registrations(actors: [UUID!] = null, start: DateTime = null, end: DateTime = null): [Registration!]!
}

"""Managers of organisation units and their connected identities"""
type Manager {
  """Manager type"""
  manager_type(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class!

  """Manager level"""
  manager_level(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class!

  """Manager responsibilities"""
  responsibilities(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): [Class!]!

  """Manager identity details"""
  employee(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, cpr_numbers: [CPR!] = null): [Employee!]

  """Managed organisation unit"""
  org_unit(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, parents: [UUID!], hierarchies: [UUID!] = null): [OrganisationUnit!]!

  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID

  """Short, unique key. Defaults to object UUID."""
  user_key: String

  """The object type."""
  type: String!

  """Validity of the manager object."""
  validity: Validity!

  """UUID of the organisation unit related to the manager."""
  org_unit_uuid: UUID!

  """UUID of the employee related to the manager."""
  employee_uuid: UUID

  """UUID of the manager type."""
  manager_type_uuid: UUID

  """UUID of the manager level."""
  manager_level_uuid: UUID

  """List of UUID's of the responsibilities."""
  responsibility_uuids: [UUID!]
}

input ManagerCreateInput {
  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID = null

  """Extra info or uuid."""
  user_key: String = null

  """The object type."""
  type: String! = "manager"

  """UUID of the manager as person."""
  person: UUID = null

  """UUID of the managers responsibilities."""
  responsibility: [UUID!]!

  """UUID of the managers organisation unit."""
  org_unit: UUID!

  """UUID of the managers level."""
  manager_level: UUID!

  """UUID of the managers type.."""
  manager_type: UUID!

  """Validity range for the manager."""
  validity: RAValidityInput!
}

type ManagerResponse {
  uuid: UUID!

  """Current state at query validity time"""
  current: Manager

  """Validities at query registration time"""
  objects: [Manager!]!

  """Registrations for the current entity"""
  registrations(actors: [UUID!] = null, start: DateTime = null, end: DateTime = null): [Registration!]!
}

input ManagerTerminateInput {
  """Start date of the validity."""
  from: DateTime = null

  """When the validity should end - required when terminating"""
  to: DateTime!

  """UUID of the manager we want to terminate."""
  uuid: UUID!
}

input ManagerUpdateInput {
  """UUID of the manager to be updated."""
  uuid: UUID!

  """Validity range for the manager to be updated."""
  validity: RAValidityInput!

  """Extra info or uuid."""
  user_key: String = null

  """UUID of the manager as person to be updated."""
  person: UUID = null

  """UUID of the managers responsibilities to be updated."""
  responsibility: [UUID!] = null

  """UUID of the managers organisation unit to be updated."""
  org_unit: UUID = null

  """UUID of the managers type to be updated."""
  manager_type: UUID = null

  """UUID of the managers level to be updated."""
  manager_level: UUID = null
}

type Mutation {
  """Creates an address."""
  address_create(input: AddressCreateInput!): AddressResponse!

  """Updates an address."""
  address_update(input: AddressUpdateInput!): AddressResponse!

  """Terminates an address."""
  address_terminate(at: AddressTerminateInput!): AddressResponse!

  """Deletes an address."""
  address_delete(uuid: UUID!): AddressResponse!

  """Creates an association."""
  association_create(input: AssociationCreateInput!): AssociationResponse!

  """Updates an association."""
  association_update(input: AssociationUpdateInput!): AssociationResponse!

  """Terminates an association"""
  association_terminate(input: AssociationTerminateInput!): AssociationResponse!

  """Creates a class."""
  class_create(input: ClassCreateInput!): UUIDReturn!

  """Updates a class."""
  class_update(uuid: UUID!, input: ClassUpdateInput!): UUIDReturn!

  """Deletes a class."""
  class_delete(uuid: UUID!): UUIDReturn!

  """Creates an employee."""
  employee_create(input: EmployeeCreateInput!): EmployeeResponse!

  """Updates an employee."""
  employee_update(input: EmployeeUpdateInput!): EmployeeResponse!

  """Terminates an employee."""
  employee_terminate(input: EmployeeTerminateInput!): EmployeeResponse!

  """Creates an engagement."""
  engagement_create(input: EngagementCreateInput!): EngagementResponse!

  """Updates an engagement."""
  engagement_update(input: EngagementUpdateInput!): EngagementResponse!

  """Terminates an engagement."""
  engagement_terminate(input: EngagementTerminateInput!): EngagementResponse!

  """Deletes an engagement."""
  engagement_delete(uuid: UUID!): EngagementResponse!

  """Creates a facet."""
  facet_create(input: FacetCreateInput!): UUIDReturn!

  """Updates a facet."""
  facet_update(input: FacetUpdateInput!, uuid: UUID!): UUIDReturn!

  """Deletes a facet."""
  facet_delete(uuid: UUID!): UUIDReturn!

  """Creates an ITSystem."""
  itsystem_create(input: ITSystemCreateInput!): UUIDReturn!

  """Updates an ITSystem."""
  itsystem_update(input: ITSystemCreateInput!, uuid: UUID!): UUIDReturn!

  """Deletes an ITSystem."""
  itsystem_delete(uuid: UUID!): UUIDReturn!

  """Creates an IT-User."""
  ituser_create(input: ITUserCreateInput!): ITUserResponse!

  """Updates an IT-User."""
  ituser_update(input: ITUserUpdateInput!): ITUserResponse!

  """Terminates IT-User."""
  ituser_terminate(input: ITUserTerminateInput!): ITUserResponse!

  """Deletes an IT-User."""
  ituser_delete(uuid: UUID!): ITUserResponse!

  """Creates a manager relation."""
  manager_create(input: ManagerCreateInput!): ManagerResponse!

  """Updates a manager relation."""
  manager_update(input: ManagerUpdateInput!): ManagerResponse!

  """Terminates a manager relation."""
  manager_terminate(input: ManagerTerminateInput!): ManagerResponse!

  """Trigger refresh for an organisation unit"""
  org_unit_refresh(uuid: UUID!): OrganisationUnitRefresh!

  """Creates an organisation unit."""
  org_unit_create(input: OrganisationUnitCreateInput!): OrganisationUnitResponse!

  """Updates an organisation unit."""
  org_unit_update(input: OrganisationUnitUpdateInput!): OrganisationUnitResponse!

  """Terminates an organization unit."""
  org_unit_terminate(unit: OrganisationUnitTerminateInput!): OrganisationUnitResponse!

  """Upload a file"""
  upload_file(file_store: FileStore!, file: Upload!, force: Boolean! = false): String!
}

"""Validity of objects with optional from date"""
type OpenValidity {
  """Start date of the validity."""
  from: DateTime

  """End date of the validity, if applicable."""
  to: DateTime
}

"""Root organisation - one and only one of these can exist"""
type Organisation {
  """The municipality code for the organisation unit"""
  municipality_code: Int

  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID

  """Short, unique key. Defaults to object UUID."""
  user_key: String

  """The object type"""
  type: String!

  """Name of the organisation."""
  name: String!
}

"""Hierarchical unit within the organisation tree"""
type OrganisationUnit {
  """The immediate descendants in the organisation tree"""
  parent(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, parents: [UUID!], hierarchies: [UUID!] = null): OrganisationUnit

  """The immediate descendants in the organisation tree"""
  children(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, hierarchies: [UUID!] = null): [OrganisationUnit!]!

  """Children count of the organisation unit."""
  child_count(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, hierarchies: [UUID!] = null): Int!

  """Organisation unit hierarchy"""
  org_unit_hierarchy_model(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class

  """Organisation unit hierarchy"""
  unit_type(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class

  """Organisation unit level"""
  org_unit_level(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class

  """Time planning strategy"""
  time_planning(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class

  """Related engagements"""
  engagements(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null): [Engagement!]!

  """Related addresses"""
  addresses(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, address_types: [UUID!] = null, address_type_user_keys: [String!] = null, employees: [UUID!] = null, engagements: [UUID!] = null): [Address!]!

  """Related leaves"""
  leaves(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null): [Leave!]!

  """Related associations"""
  associations(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null, association_types: [UUID!] = null, association_type_user_keys: [String!] = null): [Association!]!

  """Related roles"""
  roles(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null): [Role!]!

  """Related IT users"""
  itusers(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null): [ITUser!]!

  """KLE responsibilites for the organisation unit"""
  kles(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime): [KLE!]!

  """Related units for the organisational unit"""
  related_units(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime): [RelatedUnit!]!

  """Engagement associations for the organisational unit"""
  engagement_associations(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null, engagements: [UUID!] = null): [EngagementAssociation!]!

  """All ancestors in the organisation tree"""
  ancestors: [OrganisationUnit!]!

  """Managers of the organisation unit"""
  managers(inherit: Boolean! = false): [Manager!]!

  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID

  """Short, unique key. Defaults to object UUID."""
  user_key: String

  """The object type."""
  type: String!

  """Name of the created organisation unit."""
  name: String!

  """Validity of the created organisation unit."""
  validity: Validity!

  """UUID of the parent organisation unit."""
  parent_uuid: UUID

  """UUID of the organisation unit hierarchy."""
  org_unit_hierarchy: UUID

  """UUID of the organisation unit type."""
  unit_type_uuid: UUID

  """UUID of the organisation unit level."""
  org_unit_level_uuid: UUID

  """UUID of the time planning object."""
  time_planning_uuid: UUID
}

input OrganisationUnitCreateInput {
  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID = null

  """Org-unit name."""
  name: String!

  """Extra info or uuid."""
  user_key: String = null

  """UUID of the related parent."""
  parent: UUID = null

  """UUID of the type."""
  org_unit_type: UUID = null

  """UUID of time planning."""
  time_planning: UUID = null

  """UUID of unit level."""
  org_unit_level: UUID = null

  """UUID of the unit hierarchy."""
  org_unit_hierarchy: UUID = null

  """Validity range for the org-unit."""
  validity: RAValidityInput!
}

"""Response model for Organisation Unit refresh event."""
type OrganisationUnitRefresh {
  """Refresh message containing trigger responses."""
  message: String!
}

type OrganisationUnitResponse {
  uuid: UUID!

  """Current state at query validity time"""
  current: OrganisationUnit

  """Validities at query registration time"""
  objects: [OrganisationUnit!]!

  """Registrations for the current entity"""
  registrations(actors: [UUID!] = null, start: DateTime = null, end: DateTime = null): [Registration!]!
}

input OrganisationUnitTerminateInput {
  """Start date of the validity."""
  from: DateTime = null

  """When the validity should end - required when terminating"""
  to: DateTime!

  """UUID for the org-unit we want to terminate."""
  uuid: UUID!
}

input OrganisationUnitUpdateInput {
  """UUID of the organisation unit to be updated."""
  uuid: UUID!

  """Validity range for the organisation unit to be updated."""
  validity: RAValidityInput!

  """Name of the organisation unit to be updated."""
  name: String = null

  """Extra info or uuid."""
  user_key: String = null

  """UUID of the organisation units related parent to be updated."""
  parent: UUID = null

  """UUID of the organisation units type to be updated."""
  org_unit_type: UUID = null

  """UUID of the organisation units level to be updated."""
  org_unit_level: UUID = null

  """UUID of organisation units hierarchy to be updated."""
  org_unit_hierarchy: UUID = null

  """UUID of organisation units time planning to be updated."""
  time_planning: UUID = null
}

type PageInfo {
  next_cursor: Cursor
}

"""Entrypoint for all read-operations"""
type Query {
  """Get a list of all addresses, optionally by uuid(s)"""
  addresses(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, from_date: DateTime, to_date: DateTime, address_types: [UUID!] = null, address_type_user_keys: [String!] = null, employees: [UUID!] = null, engagements: [UUID!] = null, org_units: [UUID!] = null, offset: int = null): [AddressResponse!]!

  """Get a list of all Associations, optionally by uuid(s)"""
  associations(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null, org_units: [UUID!] = null, association_types: [UUID!] = null, association_type_user_keys: [String!] = null, offset: int = null): [AssociationResponse!]!

  """Get a list of all classes, optionally by uuid(s)"""
  classes(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null, offset: int = null): [Class!]!

  """Get a list of all employees, optionally by uuid(s)"""
  employees(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, from_date: DateTime, to_date: DateTime, cpr_numbers: [CPR!] = null, offset: int = null): [EmployeeResponse!]!

  """Get a list of all engagements, optionally by uuid(s)"""
  engagements(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null, org_units: [UUID!] = null, offset: int = null): [EngagementResponse!]!

  """Get a list of engagement associations"""
  engagement_associations(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null, engagements: [UUID!] = null, org_units: [UUID!] = null, offset: int = null): [EngagementAssociationResponse!]!

  """Get a list of all facets, optionally by uuid(s)"""
  facets(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, from_date: DateTime, to_date: DateTime, offset: int = null): [Facet!]!

  """Get a list of all ITSystems, optionally by uuid(s)"""
  itsystems(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, from_date: DateTime, to_date: DateTime, offset: int = null): [ITSystem!]!

  """Get a list of all ITUsers, optionally by uuid(s)"""
  itusers(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null, org_units: [UUID!] = null, offset: int = null): [ITUserResponse!]!

  """Get a list of all KLE's, optionally by uuid(s)"""
  kles(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, from_date: DateTime, to_date: DateTime, org_units: [UUID!] = null, offset: int = null): [KLEResponse!]!

  """Get a list of all leaves, optionally by uuid(s)"""
  leaves(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null, org_units: [UUID!] = null, offset: int = null): [LeaveResponse!]!

  """Get a list of all managers, optionally by uuid(s)"""
  managers(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null, org_units: [UUID!] = null, offset: int = null): [ManagerResponse!]!

  """Get a list of all organisation units, optionally by uuid(s)"""
  org_units(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, from_date: DateTime, to_date: DateTime, parents: [UUID!], hierarchies: [UUID!] = null, offset: int = null): [OrganisationUnitResponse!]!

  """Get a list of related organisation units, optionally by uuid(s)"""
  related_units(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, from_date: DateTime, to_date: DateTime, org_units: [UUID!] = null, offset: int = null): [RelatedUnitResponse!]!

  """Get a list of all roles, optionally by uuid(s)"""
  roles(uuids: [UUID!] = null, user_keys: [String!] = null, limit: int = null, from_date: DateTime, to_date: DateTime, employees: [UUID!] = null, org_units: [UUID!] = null, offset: int = null): [RoleResponse!]!

  """Get a list of all health checks, optionally by identifier(s)"""
  healths(limit: Int = null, cursor: Cursor = null, identifiers: [String!] = null): HealthPaged!

  """Get a list of all files, optionally by filename(s)"""
  files(file_store: FileStore!, limit: Int = null, cursor: Cursor = null, file_names: [String!] = null): [File!]!

  """Get a list of configuration variables."""
  configuration(limit: Int = null, cursor: Cursor = null, identifiers: [String!] = null): [Configuration!]!

  """
  Get the root-organisation. This endpoint fails if not exactly one exists in LoRa.
  """
  org: Organisation!

  """Get component versions"""
  version: Version!
}

input RAValidityInput {
  """Start date of the validity."""
  from: DateTime!

  """End date of the validity, if applicable."""
  to: DateTime = null
}

type Registration {
  registration_id: Int!
  start: DateTime!
  end: DateTime
  actor: UUID!
}

"""list of related organisation units"""
type RelatedUnit {
  """Related organisation units"""
  org_units(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, parents: [UUID!], hierarchies: [UUID!] = null): [OrganisationUnit!]!

  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID

  """Short, unique key. Defaults to object UUID."""
  user_key: String

  """The object type."""
  type: String!

  """Validity of the relatedUnit object."""
  validity: Validity!

  """UUIDs of the related organisation units."""
  org_unit_uuids: [UUID!]!
}

type RelatedUnitResponse {
  uuid: UUID!

  """Current state at query validity time"""
  current: RelatedUnit

  """Validities at query registration time"""
  objects: [RelatedUnit!]!

  """Registrations for the current entity"""
  registrations(actors: [UUID!] = null, start: DateTime = null, end: DateTime = null): [Registration!]!
}

"""Role an employee has within an organisation unit"""
type Role {
  """Role type"""
  role_type(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, facets: [UUID!] = null, facet_user_keys: [String!] = null, parents: [UUID!] = null, parent_user_keys: [String!] = null): Class!

  """Connected employee"""
  employee(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, cpr_numbers: [CPR!] = null): [Employee!]!

  """Connected organisation unit"""
  org_unit(user_keys: [String!] = null, limit: int = null, cursor: Cursor = null, from_date: DateTime, to_date: DateTime, parents: [UUID!], hierarchies: [UUID!] = null): [OrganisationUnit!]!

  """UUID to be created. Will be autogenerated if not specified."""
  uuid: UUID

  """Short, unique key. Defaults to object UUID."""
  user_key: String

  """The object type."""
  type: String!

  """Validity of the role object."""
  validity: Validity!

  """UUID of the organisation unit related to the association."""
  org_unit_uuid: UUID!

  """UUID of the employee related to the role."""
  employee_uuid: UUID!

  """UUID of the role type klasse."""
  role_type_uuid: UUID!
}

type RoleResponse {
  uuid: UUID!

  """Current state at query validity time"""
  current: Role

  """Validities at query registration time"""
  objects: [Role!]!

  """Registrations for the current entity"""
  registrations(actors: [UUID!] = null, start: DateTime = null, end: DateTime = null): [Registration!]!
}

scalar UUID

type UUIDReturn {
  uuid: UUID!
}

scalar Upload

"""Validity of objects with required from date"""
type Validity {
  """Start date of the validity."""
  from: DateTime!

  """End date of the validity, if applicable."""
  to: DateTime
}

"""MO & LoRa & DIPEX versions"""
type Version {
  """OS2mo Version"""
  mo_version: String

  """OS2mo commit hash"""
  mo_hash: String

  """LoRa version"""
  lora_version: String

  """DIPEX version"""
  dipex_version: String
}

scalar int