[tool.poetry]
name = "os2mint_omada"
version = "0.0.0"  # versioning handled by conventional commits
description = "OS2mo Omada integration"
authors = ["Magenta <info@magenta.dk>"]
license = "MPL-2.0"
readme = "README.md"
homepage = "https://magenta.dk/"
repository = "https://git.magenta.dk/rammearkitektur/os2mint/os2mint-omada"
keywords = ["os2mo", "os2mint", "omada"]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^1"
structlog = "^23.1.0"
uvicorn = "^0.23.2"
httpx = "^0.23.3"
ramodels = "^18.8.0"
raclients = "^3.1.12"
prometheus-fastapi-instrumentator = "^5.10.0"
more-itertools = "^9.1.0"
ra-utils = "^1.13.9"
fastramqpi = "1.5.5"
ramqp = "^9.1.0"
pytest-split = "^0.8.1"
ariadne-codegen = {extras = ["subscriptions"], version = "^0.7.1"}

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.2"
black = "^23.9.1"
mypy = "^1.5.1"
reorder-python-imports = "^3.12.0"
pre-commit = "^2.20.0"
pytest-cov = "^3.0.0"
pytest-env = "^0.6.2"
respx = "^0.20.2"
pytest-asyncio = "^0.18.3"
freezegun = "^1.2.1"
types-freezegun = "^1.1.10"
tenacity = "^8.2.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode="auto"
markers = [
  "integration_test: mark test as an integration test",
]

[tool.mypy]
plugins = ["pydantic.mypy"]

[tool.ariadne-codegen]
# Ideally, the GraphQL client is generated as part of the build process and
# never committed to git. Unfortunately, most of our tools and CI analyses the
# project directly as it is in Git. In the future - when the CI templates
# operate on the built container image - only the definition of the schema and
# queries should be checked in.
#
# The default package name is `graphql_client`. Make it more obvious that the
# files are not to be modified manually.
target_package_name = "autogenerated_graphql_client"
target_package_path = "os2mint_omada/"
client_name = "GraphQLClient"
schema_path = "schema.graphql"  # curl -O http://localhost:5000/graphql/v19/schema.graphql
queries_path = "queries.graphql"
plugins = [
    # Return values directly when only a single top field is requested
    "ariadne_codegen.contrib.shorter_results.ShorterResultsPlugin",
]
[tool.ariadne-codegen.scalars.DateTime]
type = "datetime.datetime"
[tool.ariadne-codegen.scalars.UUID]
type = "uuid.UUID"
